/*resource "random_pet" "rg_name" {
  prefix = var.resource_group_name_prefix
}

resource "azurerm_resource_group" "project_dvwa" {
  location = var.resource_group_location
  name     = "project_dvwa"
}

/*Create Resource Group and set location in variables file
resource "azurerm_resource_group" "project_dvwa" {
  location = "uksouth"
  name     = "project_dvwa"
} */

# Create virtual network
resource "azurerm_virtual_network" "dvwa_network_1" {
  name                = "dvwa_network_1"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name
}

# Create subnet
resource "azurerm_subnet" "dvwa_subnet_1" {
  name                 = "dvwa_subnet_1"
  resource_group_name  = azurerm_resource_group.project_dvwa.name
  virtual_network_name = azurerm_virtual_network.dvwa_network_1.name
  address_prefixes     = ["10.0.1.0/24"]
 }

resource "azurerm_subnet" "dvwa_subnet_2" {
  name                 = "dvwa_subnet_2"
  resource_group_name  = azurerm_resource_group.project_dvwa.name
  virtual_network_name = azurerm_virtual_network.dvwa_network_1.name
  address_prefixes     = ["10.0.2.0/24"]
}

resource "azurerm_subnet" "frontend_subnet" {
  name                 = "frontend_subnet"
  resource_group_name  = azurerm_resource_group.project_dvwa.name
  virtual_network_name = azurerm_virtual_network.dvwa_network_1.name
  address_prefixes     = ["10.0.3.0/24"]
}

# Create public IPs
resource "azurerm_public_ip" "public_ip_1" {
  name                = "public_ip_1"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name
  allocation_method   = "Static"
  zones               = ["2"]
  sku                 = "Standard"
}

resource "azurerm_public_ip" "public_ip_2" {
  name                = "public_ip_2"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name
  allocation_method   = "Static"
  zones               = ["3"]
  sku                 = "Standard"
}
# Public ip for the load balencer
resource "azurerm_public_ip" "public_ip_3" {
  name                = "public_ip_3"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

# Create Network Security Group and rule
resource "azurerm_network_security_group" "project_nsg_1" {
  name                = "project_nsg_1"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name

  security_rule {
    name                       = "SSH"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "92.237.154.94/32"
    destination_address_prefix = "*"
  }
}

# Create network interface
resource "azurerm_network_interface" "dvwa_nic_1" {
  name                = "dvwa_nic_1"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name

  ip_configuration {
    name                          = "dvwa_nic_config_1"
    subnet_id                     = azurerm_subnet.dvwa_subnet_1.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.public_ip_1.id
  }
}
resource "azurerm_network_interface" "dvwa_nic_2" {
  name                = "dvwa_nic_2"
  location            = azurerm_resource_group.project_dvwa.location
  resource_group_name = azurerm_resource_group.project_dvwa.name

  ip_configuration {
    name                          = "dvwa_nic_config_2"
    subnet_id                     = azurerm_subnet.dvwa_subnet_2.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.public_ip_2.id
  }
}

# Connect the security group to the network interface
resource "azurerm_network_interface_security_group_association" "nsg_1" {
  network_interface_id      = azurerm_network_interface.dvwa_nic_1.id
  network_security_group_id = azurerm_network_security_group.project_nsg_1.id
}
resource "azurerm_network_interface_security_group_association" "nsg_2" {
  network_interface_id      = azurerm_network_interface.dvwa_nic_2.id
  network_security_group_id = azurerm_network_security_group.project_nsg_1.id
}

# Generate random text for a unique storage account name
resource "random_id" "random_id" {
  keepers = {
    # Generate a new ID only when a new resource group is defined
    resource_group = azurerm_resource_group.project_dvwa.name
  }

  byte_length = 8
}

# Create storage account for boot diagnostics
resource "azurerm_storage_account" "dvwa_store_1" {
  name                     = "diag${random_id.random_id.hex}"
  location                 = azurerm_resource_group.project_dvwa.location
  resource_group_name      = azurerm_resource_group.project_dvwa.name
  account_tier             = "Standard"
  account_replication_type = "LRS"
}

# Create (and display) an SSH key
resource "tls_private_key" "ssh_key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

# Create virtual machine
resource "azurerm_linux_virtual_machine" "dvwa_vm_1" {
  name                  = "dvwa_vm_1"
  location              = azurerm_resource_group.project_dvwa.location
  resource_group_name   = azurerm_resource_group.project_dvwa.name
  network_interface_ids = [azurerm_network_interface.dvwa_nic_1.id]
  size                  = "Standard_B1ls"
  zone                  = 2
  os_disk {
    name                 = "dvwa_disk_1"
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-focal"
    sku       = "20_04-lts-gen2"
    version   = "latest"
  }

  computer_name                   = "myvm"
  admin_username                  = "james"
  disable_password_authentication = true

  admin_ssh_key {
    username   = "james"
    public_key = tls_private_key.ssh_key.public_key_openssh
  }

  boot_diagnostics {
    storage_account_uri = azurerm_storage_account.dvwa_store_1.primary_blob_endpoint
  }
}

resource "azurerm_linux_virtual_machine" "dvwa_vm_2" {
  name                  = "dvwa_vm_2"
  location              = azurerm_resource_group.project_dvwa.location
  resource_group_name   = azurerm_resource_group.project_dvwa.name
  network_interface_ids = [azurerm_network_interface.dvwa_nic_2.id]
  size                  = "Standard_B1ls"
  zone                  = 3

  os_disk {
    name                 = "dvwa_disk_2"
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-focal"
    sku       = "20_04-lts-gen2"
    version   = "latest"
  }

  computer_name                   = "myvm"
  admin_username                  = "james"
  disable_password_authentication = true

  admin_ssh_key {
    username   = "james"
    public_key = tls_private_key.ssh_key.public_key_openssh
  }

  boot_diagnostics {
    storage_account_uri = azurerm_storage_account.dvwa_store_1.primary_blob_endpoint
  }
}

# Create load balencer
resource "azurerm_lb" "dvwa_lb" {
 name                = "dvwa_lb"
 location            = azurerm_resource_group.project_dvwa.location
 resource_group_name = azurerm_resource_group.project_dvwa.name
 sku                 = "Standard"
 frontend_ip_configuration {
   name                 = "PublicIPAddress"
   public_ip_address_id = azurerm_public_ip.public_ip_3.id
 }
}
# Create backend pool and attach 
resource "azurerm_lb_backend_address_pool" "dvwa_back_1" {
 #resource_group_name = azurerm_resource_group.rg.name
 loadbalancer_id     = azurerm_lb.dvwa_lb.id
 name                = "BackEndAddressPool"
}

/*resource "azurerm_lb_backend_address_pool_address" "address_pool_1" {
  name                    = "address_pool_1"
  backend_address_pool_id = azurerm_lb_backend_address_pool.dvwa_back_1.id
  virtual_network_id      = azurerm_virtual_network.dvwa_network_1.id
}

resource "azurerm_network_interface_backend_address_pool_association" "dvwa_backend_nic_1" {
  network_interface_id    = azurerm_network_interface.dvwa_nic_1.id
  ip_configuration_name   = "dvwa_nic_config_1"
  backend_address_pool_id = azurerm_lb_backend_address_pool.dvwa_back_1.id
}

resource "azurerm_network_interface_backend_address_pool_association" "dvwa_backend_nic_2" {
  network_interface_id    = azurerm_network_interface.dvwa_nic_2.id
  ip_configuration_name   = "dvwa_nic_config_2"
  backend_address_pool_id = azurerm_lb_backend_address_pool.dvwa_back_1.id
}

resource "azurerm_lb_probe" "dvwa_lb_probe" {
 ##resource_group_name = azurerm_resource_group.rg.name
 loadbalancer_id     = azurerm_lb.dvwa_lb.id
 name                = "ssh-running-probe"
 port                = 22
}

resource "azurerm_lb_rule" "dvwa_lb_rule" {
   #resource_group_name            = azurerm_resource_group.rg.name
   loadbalancer_id                = azurerm_lb.dvwa_lb.id
   name                           = "http"
   protocol                       = "Tcp"
   frontend_port                  = 80
   backend_port                   = 80
   #backend_address_pool_ids       = azurerm_lb_backend_address_pool.dvwa_back_1.id
   frontend_ip_configuration_name = "PublicIPAddress"
   probe_id                       = azurerm_lb_probe.dvwa_lb_probe.id
}
*/

# Create public IPs
/*resource "azurerm_public_ip" "public_ip_1" {
  name                = "public_ip_1"
  location            = module.resource_group.resource_group_location
  resource_group_name = module.resource_group.resource_group_name
  allocation_method   = "Static"
  zones               = ["2"]
  sku                 = "Standard"
}

resource "azurerm_public_ip" "public_ip_2" {
  name                = "public_ip_2"
  location            = module.resource_group.resource_group_location
  resource_group_name = module.resource_group.resource_group_name
  allocation_method   = "Static"
  zones               = ["3"]
  sku                 = "Standard"
}*/